# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'
steps:
  - script: echo hello from Windows with a change in the line
  - script: md sampledir
  - script: echo "Verizo@1" >> c:\cred.txt
  - script: dir /od && dir
  - pwsh:
        # Variables for common values
        $resourceGroup = "myResourceGroup"
        $location = "westeurope"
        $vmName = "myVM"

# Create user object
        $cred = Get-Credential -Message "Enter a username and password for the virtual machine."

# Create a resource group
        New-AzResourceGroup -Name $resourceGroup -Location $location

# Create a subnet configuration
        $subnetConfig = New-AzVirtualNetworkSubnetConfig -Name mySubnet -AddressPrefix 192.168.1.0/24

# Create a virtual network
        $vnet = New-AzVirtualNetwork -ResourceGroupName $resourceGroup -Location $location -Name MYvNET -AddressPrefix 192.168.0.0/16 -Subnet $subnetConfig

# Create a public IP address and specify a DNS name
        $pip = New-AzPublicIpAddress -ResourceGroupName $resourceGroup -Location $location `-Name "mypublicdns$(Get-Random)" -AllocationMethod Static -IdleTimeoutInMinutes 4

# Create an inbound network security group rule for port 3389
        $nsgRuleRDP = New-AzNetworkSecurityRuleConfig -Name myNetworkSecurityGroupRuleRDP  -Protocol Tcp -Direction Inbound -Priority 1000 -SourceAddressPrefix * -SourcePortRange * -DestinationAddressPrefix * `-DestinationPortRange 3389 -Access Allow

# Create a network security group
        $nsg = New-AzNetworkSecurityGroup -ResourceGroupName $resourceGroup -Location $location `-Name myNetworkSecurityGroup -SecurityRules $nsgRuleRDP

# Create a virtual network card and associate with public IP address and NSG
        $nic = New-AzNetworkInterface -Name myNic -ResourceGroupName $resourceGroup -Location $location `-SubnetId $vnet.Subnets[0].Id -PublicIpAddressId $pip.Id -NetworkSecurityGroupId $nsg.Id

# Create a virtual machine configuration
        $vmConfig = New-AzVMConfig -VMName $vmName -VMSize Standard_D1 | Set-AzVMOperatingSystem -Windows -ComputerName $vmName -Credential $cred | `Set-AzVMSourceImage -PublisherName MicrosoftWindowsServer -Offer WindowsServer -Skus 2016-Datacenter -Version latest | `Add-AzVMNetworkInterface -Id $nic.Id

# Create a virtual machine
        New-AzVM -ResourceGroupName $resourceGroup -Location $location -VM $vmConfig
 #OLD CODE 
 # - pwsh: |
 #       Write-Output "test output"
        #$userId = "munisekhar.reddy@gmail.com"
        #$password = get-content -Path "c:\cred.txt"
        #Write-Output  $password
        #Install-Module AzureRM
        #$password = get-content -Path "c:\cred.txt" | ConvertTo-SecureString -asPlainText -Force
        #Set the powershell credential object
        #$cred = New-Object -TypeName System.Management.Automation.PSCredential($userId ,$password)
 
 #       $passwd = ConvertTo-SecureString "Verizon@1" -AsPlainText -Force
  #      $pscredential = New-Object System.Management.Automation.PSCredential('service principal name/id', $passwd)
  #      Connect-AzAccount -ServicePrincipal -Credential $pscredential -TenantId "59b2865a-7fb8-4ccb-ab68-72cbca88fc48"
  #      az resource list
        #log On To Azure Account
        #Login-AzureRmAccount -Credential $cred -TenantId "59b2865a-7fb8-4ccb-ab68-72cbca88fc48"
        
  #  $AzCred = Get-Creden tial -UserName "munisekhar.reddy@gmail.com"
  #- script: Set-Variabl e -Name "AzCred" -Value "Verizon@1"
  #- script: az login -u munisekhar.reddy@gmail.com -p Verizon@1
  #- script: az resource list

